@model LeaveManager.Models.EmployeeLeaveRequestViewModel

@{
    ViewBag.Title = "Create";
}
<br />
<h2>Create New Leave Request</h2>
<br />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4></h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.employeeID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("employeeID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.employeeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.allDayEvent, htmlAttributes: new { @class = "control-label col-md-2"})
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.allDayEvent, new { @id = "allDayEvent" })
                    @Html.ValidationMessageFor(model => model.allDayEvent, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.startTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <p>
                    @*<input id="datetimepicker" type="text">*@
                   
                    @Html.EditorFor(model => model.startTime, new { htmlAttributes = new { @class = "form-control", @id = "datetimepickerStart"} })
                    <script type="text/javascript">
 
                         checked = false;

                        $('#allDayEvent').click(function () {
                            checked = !checked;
                        });


                        jQuery('#datetimepickerStart').datetimepicker({
                          
                            onShow:function( ct ){

                                if(checked){
                                
                                    this.setOptions({
                                        timepicker: false,
                                        format: 'm/d/Y',
                                    })
                                }else{
                                    this.setOptions({
                                        timepicker: true
                                    })
                                }    
                            },
                        });
                    </script>
                    
                </p>


                @Html.ValidationMessageFor(model => model.startTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.endTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <p>
                    
                    @Html.EditorFor(model => model.endTime, new { htmlAttributes = new { @class = "form-control", @id = "datetimepickerEnd" } })
                    <script type="text/javascript">

                        jQuery('#datetimepickerEnd').datetimepicker({

                            onShow:function( ct ){

                                if(checked){

                                    this.setOptions({
                                        timepicker: false,
                                        format: 'm/d/Y'
                                    })

                                }else{
                                    this.setOptions({
                                        timepicker: true      
                                    })
                                }
                            },
                        });
                    </script>

                </p>


                @Html.ValidationMessageFor(model => model.startTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.leaveReason.leaveReasonName, "Leave Reason", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("leaveReasonID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.leaveReason.leaveReasonID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
             
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.deliveryManagerID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("deliveryManagerID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.deliveryManagerID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.departmentManagerID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("departmentManagerID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.departmentManagerID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
